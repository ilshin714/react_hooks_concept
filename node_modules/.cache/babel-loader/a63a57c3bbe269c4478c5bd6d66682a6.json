{"ast":null,"code":"var _jsxFileName = \"/Users/ilshin714/Desktop/Programming/React/react-hooks/src/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\"; //import App from './App';\n\nimport reportWebVitals from \"./reportWebVitals\";\nimport { FaStar } from \"react-icons/fa\"; //// -------------------------------- #1 The concept of destructuring\n// const [first, second]= [\"Keum Ji Kim\", \"David Shin\", \"Sandy Park\"];\n// console.log(first);\n// console.log(second);\n// const [,,third] =[\"Keum Ji Kim\", \"David Shin\", \"Sandy Park\"];\n// console.log(third);\n// // -------------------------------- #2 Incorporating the useState\n// function App() {\n//   const [status, setStatus] = useState(\"Not Delivered\");\n//   return (\n//     <div>\n//       <h1>THe package is: {status}</h1>\n//       <button onClick={() => setStatus(\"Delivered\")}>Deilver</button>    \n//     </div>\n//   );\n// }\n// // -------------------------------- #3 Building a checkbox with useStage\n// function App(){\n//   const [checked, setChecked] = useState(false);\n//   return (\n//     <div>\n//       <input \n//         type=\"checkbox\" \n//         value={checked}\n//         onChange={() => \n//           setChecked((checked) => !checked)}\n//         />\n//       <p>{checked ? \"checked\" : \"not checked\"}</p>\n//     </div>\n//   )\n// }\n// // -------------------------------- #4 Building a checkbox with useStage\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst createArray = length => [...Array(length)];\n\nfunction Star({\n  selected = false,\n  onSelect\n}) {\n  return /*#__PURE__*/_jsxDEV(FaStar, {\n    color: selected ? \"red\" : \"gray\",\n    onClick: onSelect\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 10\n  }, this);\n}\n\n_c = Star;\n\nfunction StarRating({\n  totalStars = 5\n}) {\n  _s();\n\n  const [selectedStarts, setSelectedStars] = useState(0);\n  return createArray(totalStars).map((n, i) => /*#__PURE__*/_jsxDEV(Star, {\n    selected: selectedStarts > i,\n    onSelect: () => selectedStarts(i + 1)\n  }, i, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 7\n  }, this));\n}\n\n_s(StarRating, \"pnRgFOVrxZpRiyoY+Qw8mBmVNok=\");\n\n_c2 = StarRating;\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(StarRating, {\n    totalStars: 10\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 10\n  }, this);\n}\n\n_c3 = App;\nReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 74,\n  columnNumber: 3\n}, this), document.getElementById(\"root\")); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Star\");\n$RefreshReg$(_c2, \"StarRating\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"sources":["/Users/ilshin714/Desktop/Programming/React/react-hooks/src/index.js"],"names":["React","useState","ReactDOM","reportWebVitals","FaStar","createArray","length","Array","Star","selected","onSelect","StarRating","totalStars","selectedStarts","setSelectedStars","map","n","i","App","render","document","getElementById"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP,C,CACA;;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAAQC,MAAR,QAAqB,gBAArB,C,CAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;;;;AACA,MAAMC,WAAW,GAAIC,MAAD,IAAY,CAC9B,GAAGC,KAAK,CAACD,MAAD,CADsB,CAAhC;;AAIA,SAASE,IAAT,CAAc;AAACC,EAAAA,QAAQ,GAAG,KAAZ;AAAmBC,EAAAA;AAAnB,CAAd,EAA2C;AACzC,sBAAO,QAAC,MAAD;AAAQ,IAAA,KAAK,EAAED,QAAQ,GAAG,KAAH,GAAW,MAAlC;AACL,IAAA,OAAO,EAAEC;AADJ;AAAA;AAAA;AAAA;AAAA,UAAP;AAGD;;KAJQF,I;;AAMT,SAASG,UAAT,CAAoB;AAACC,EAAAA,UAAU,GAAG;AAAd,CAApB,EAAqC;AAAA;;AACnC,QAAM,CACJC,cADI,EAEJC,gBAFI,IAGFb,QAAQ,CAAC,CAAD,CAHZ;AAKA,SAAOI,WAAW,CAACO,UAAD,CAAX,CAAwBG,GAAxB,CAA4B,CAACC,CAAD,EAAGC,CAAH,kBAC/B,QAAC,IAAD;AAAc,IAAA,QAAQ,EAAGJ,cAAc,GAAGI,CAA1C;AAA6C,IAAA,QAAQ,EAAE,MAAMJ,cAAc,CAACI,CAAC,GAAC,CAAH;AAA3E,KAAWA,CAAX;AAAA;AAAA;AAAA;AAAA,UADG,CAAP;AAID;;GAVQN,U;;MAAAA,U;;AAYT,SAASO,GAAT,GAAc;AACZ,sBAAO,QAAC,UAAD;AAAY,IAAA,UAAU,EAAE;AAAxB;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;MAFQA,G;AAIThB,QAAQ,CAACiB,MAAT,eACE,QAAC,KAAD,CAAO,UAAP;AAAA,yBACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF,EAIEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJF,E,CAOA;AACA;AACA;;AACAlB,eAAe","sourcesContent":["import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n//import App from './App';\nimport reportWebVitals from \"./reportWebVitals\";\nimport {FaStar} from \"react-icons/fa\"; \n\n\n//// -------------------------------- #1 The concept of destructuring\n// const [first, second]= [\"Keum Ji Kim\", \"David Shin\", \"Sandy Park\"];\n// console.log(first);\n// console.log(second);\n// const [,,third] =[\"Keum Ji Kim\", \"David Shin\", \"Sandy Park\"];\n// console.log(third);\n\n// // -------------------------------- #2 Incorporating the useState\n// function App() {\n//   const [status, setStatus] = useState(\"Not Delivered\");\n\n//   return (\n//     <div>\n//       <h1>THe package is: {status}</h1>\n//       <button onClick={() => setStatus(\"Delivered\")}>Deilver</button>    \n//     </div>\n//   );\n// }\n\n\n// // -------------------------------- #3 Building a checkbox with useStage\n// function App(){\n//   const [checked, setChecked] = useState(false);\n//   return (\n//     <div>\n//       <input \n//         type=\"checkbox\" \n//         value={checked}\n//         onChange={() => \n//           setChecked((checked) => !checked)}\n//         />\n\n//       <p>{checked ? \"checked\" : \"not checked\"}</p>\n//     </div>\n//   )\n// }\n\n// // -------------------------------- #4 Building a checkbox with useStage\nconst createArray = (length) => [\n  ...Array(length)\n];\n\nfunction Star({selected = false, onSelect}){\n  return <FaStar color={selected ? \"red\" : \"gray\"}\n    onClick={onSelect}\n  />;\n}\n\nfunction StarRating({totalStars = 5}){ \n  const [\n    selectedStarts, \n    setSelectedStars\n  ] = useState(0);\n\n  return createArray(totalStars).map((n,i) => (\n      <Star key={i} selected ={selectedStarts > i} onSelect={() => selectedStarts(i+1)}/>\n    )\n  );\n}\n\nfunction App(){\n  return <StarRating totalStars={10}/>\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"]},"metadata":{},"sourceType":"module"}