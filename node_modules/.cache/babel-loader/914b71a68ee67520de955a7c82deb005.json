{"ast":null,"code":"var _jsxFileName = \"/Users/ilshin714/Desktop/Programming/React/react-hooks/src/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\"; //import App from './App';\n\nimport reportWebVitals from \"./reportWebVitals\";\nimport { FaStar } from \"react-icons/fa\"; //// -------------------------------- #1 The concept of destructuring\n// const [first, second]= [\"Keum Ji Kim\", \"David Shin\", \"Sandy Park\"];\n// console.log(first);\n// console.log(second);\n// const [,,third] =[\"Keum Ji Kim\", \"David Shin\", \"Sandy Park\"];\n// console.log(third);\n// // -------------------------------- #2 Incorporating the useState\n// function App() {\n//   const [status, setStatus] = useState(\"Not Delivered\");\n//   return (\n//     <div>\n//       <h1>THe package is: {status}</h1>\n//       <button onClick={() => setStatus(\"Delivered\")}>Deilver</button>    \n//     </div>\n//   );\n// }\n// // -------------------------------- #3 Building a checkbox with useStage\n// function App(){\n//   const [checked, setChecked] = useState(false);\n//   return (\n//     <div>\n//       <input \n//         type=\"checkbox\" \n//         value={checked}\n//         onChange={() => \n//           setChecked((checked) => !checked)}\n//         />\n//       <p>{checked ? \"checked\" : \"not checked\"}</p>\n//     </div>\n//   )\n// }\n// // // -------------------------------- #4 Building a checkbox with useStage\n// const createArray = (length) => [\n//   ...Array(length)\n// ];\n// function Star({selected = false, onSelect}){\n//   return <FaStar color={selected ? \"red\" : \"gray\"}\n//     onClick={onSelect}\n//   />;\n// }\n// function StarRating({totalStars = 5}){ \n//   const [\n//     selectedStarts, \n//     setSelectedStars\n//   ] = useState(0);\n//   return <>\n//   {createArray(totalStars).map((n,i) => (\n//       <Star key={i} selected ={selectedStarts > i} onSelect={() => setSelectedStars(i+1)}/>\n//     )\n//   )}\n//   <p>{selectedStarts} of {totalStars}</p>\n//   </>\n// }\n// function App(){\n//   return <StarRating totalStars={10}/>\n// }\n// -------------------------------- #4 Introducing useEffect\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [name, setName] = useState(\"Ilshin\");\n  useEffect(() => {\n    document.title = `Celebreate ${name}`;\n  });\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Congratulations \", name, \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setName(\"Shinny\"),\n      children: \"Change the winner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"X41q/UaqpPg721afcEN2ZV7Ft9I=\");\n\n_c = App;\nReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 96,\n  columnNumber: 3\n}, this), document.getElementById(\"root\")); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/ilshin714/Desktop/Programming/React/react-hooks/src/index.js"],"names":["React","useEffect","useState","ReactDOM","reportWebVitals","FaStar","App","name","setName","document","title","render","getElementById"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP,C,CACA;;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAAQC,MAAR,QAAqB,gBAArB,C,CAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;;;;AACA,SAASC,GAAT,GAAc;AAAA;;AACZ,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,QAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAK;AACbQ,IAAAA,QAAQ,CAACC,KAAT,GAAkB,cAAaH,IAAK,EAApC;AACD,GAFQ,CAAT;AAKA,sBACE;AAAA,4BACE;AAAA,qCAAoBA,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAE,MAAKC,OAAO,CAAC,QAAD,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GAdQF,G;;KAAAA,G;AAiBTH,QAAQ,CAACQ,MAAT,eACE,QAAC,KAAD,CAAO,UAAP;AAAA,yBACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF,EAIEF,QAAQ,CAACG,cAAT,CAAwB,MAAxB,CAJF,E,CAOA;AACA;AACA;;AACAR,eAAe","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n//import App from './App';\nimport reportWebVitals from \"./reportWebVitals\";\nimport {FaStar} from \"react-icons/fa\"; \n\n\n//// -------------------------------- #1 The concept of destructuring\n// const [first, second]= [\"Keum Ji Kim\", \"David Shin\", \"Sandy Park\"];\n// console.log(first);\n// console.log(second);\n// const [,,third] =[\"Keum Ji Kim\", \"David Shin\", \"Sandy Park\"];\n// console.log(third);\n\n// // -------------------------------- #2 Incorporating the useState\n// function App() {\n//   const [status, setStatus] = useState(\"Not Delivered\");\n\n//   return (\n//     <div>\n//       <h1>THe package is: {status}</h1>\n//       <button onClick={() => setStatus(\"Delivered\")}>Deilver</button>    \n//     </div>\n//   );\n// }\n\n\n// // -------------------------------- #3 Building a checkbox with useStage\n// function App(){\n//   const [checked, setChecked] = useState(false);\n//   return (\n//     <div>\n//       <input \n//         type=\"checkbox\" \n//         value={checked}\n//         onChange={() => \n//           setChecked((checked) => !checked)}\n//         />\n\n//       <p>{checked ? \"checked\" : \"not checked\"}</p>\n//     </div>\n//   )\n// }\n\n// // // -------------------------------- #4 Building a checkbox with useStage\n// const createArray = (length) => [\n//   ...Array(length)\n// ];\n\n// function Star({selected = false, onSelect}){\n//   return <FaStar color={selected ? \"red\" : \"gray\"}\n//     onClick={onSelect}\n//   />;\n// }\n\n// function StarRating({totalStars = 5}){ \n//   const [\n//     selectedStarts, \n//     setSelectedStars\n//   ] = useState(0);\n\n//   return <>\n//   {createArray(totalStars).map((n,i) => (\n//       <Star key={i} selected ={selectedStarts > i} onSelect={() => setSelectedStars(i+1)}/>\n//     )\n//   )}\n//   <p>{selectedStarts} of {totalStars}</p>\n\n//   </>\n// }\n\n// function App(){\n//   return <StarRating totalStars={10}/>\n// }\n\n// -------------------------------- #4 Introducing useEffect\nfunction App(){\n  const [name, setName] = useState(\"Ilshin\");\n\n  useEffect(() =>{\n    document.title = `Celebreate ${name}`;\n  });\n\n\n  return(\n    <section>\n      <p>Congratulations {name}!</p>\n      <button onClick={()=> setName(\"Shinny\")}>Change the winner</button>\n    </section>\n  )\n}\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"]},"metadata":{},"sourceType":"module"}