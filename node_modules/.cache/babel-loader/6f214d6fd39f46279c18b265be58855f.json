{"ast":null,"code":"var _s = $RefreshSig$();\n\n//if the data isn't available yet but is loading \n// if we get the data\n// if there's and error\nimport { useState, useEffect } from \"react\";\nexport function useFetch(uri) {\n  _s();\n\n  const [data, setData] = useState();\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState();\n  useEffect(() => {\n    if (!uri) return;\n    fetch(uri).then(data => data.json()).then(setData).then(() => setLoading(false)).catch(setError);\n  }, [uri]);\n  return {\n    loading,\n    data,\n    error\n  };\n}\n\n_s(useFetch, \"NHGwgwF0D09hI9K12vQBrfPMsF4=\");","map":{"version":3,"sources":["/Users/ilshin714/Desktop/Programming/React/react-hooks/src/useFetch.js"],"names":["useState","useEffect","useFetch","uri","data","setData","loading","setLoading","error","setError","fetch","then","json","catch"],"mappings":";;AAAA;AACA;AACA;AAEA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AAEA,OAAO,SAASC,QAAT,CAAkBC,GAAlB,EAAsB;AAAA;;AACzB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,EAAhC;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,EAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAI;AACV,QAAG,CAACE,GAAJ,EAAS;AACTO,IAAAA,KAAK,CAACP,GAAD,CAAL,CACKQ,IADL,CACWP,IAAD,IAAUA,IAAI,CAACQ,IAAL,EADpB,EAEKD,IAFL,CAEUN,OAFV,EAGKM,IAHL,CAGU,MAAKJ,UAAU,CAAC,KAAD,CAHzB,EAIKM,KAJL,CAIWJ,QAJX;AAMH,GARQ,EAQN,CAACN,GAAD,CARM,CAAT;AAUA,SAAO;AAACG,IAAAA,OAAD;AAAUF,IAAAA,IAAV;AAAgBI,IAAAA;AAAhB,GAAP;AACH;;GAhBeN,Q","sourcesContent":["//if the data isn't available yet but is loading \n// if we get the data\n// if there's and error\n\nimport {useState, useEffect} from \"react\"\n\nexport function useFetch(uri){\n    const [data, setData] = useState();\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState();\n\n    useEffect(()=>{\n        if(!uri) return;\n        fetch(uri)\n            .then((data) => data.json())\n            .then(setData)\n            .then(()=> setLoading(false))\n            .catch(setError);\n\n    }, [uri]);\n\n    return {loading, data, error};\n}"]},"metadata":{},"sourceType":"module"}